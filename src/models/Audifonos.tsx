/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
        
import * as THREE from 'three'
        import  {useRef}  from 'react'
        import { useGLTF, 
        
         } from '@react-three/drei'
/*         import { GLTF } from "three/examples/jsm/loaders/GLTFLoader"
        
type GLTFResult = GLTF & {
    nodes: {
      Cushion: THREE.Mesh,Ear_Cup: THREE.Mesh,['Mid-']: THREE.Mesh,Seprator001: THREE.Mesh,Seprator: THREE.Mesh,Cylinder025: THREE.Mesh,Cylinder025_1: THREE.Mesh
      
    }
    materials: {
      Cushion: THREE.MeshStandardMaterial,['Black-1']: THREE.MeshStandardMaterial,['Black-2']: THREE.MeshStandardMaterial,Connector: THREE.MeshStandardMaterial,GlowBlue: THREE.MeshStandardMaterial
    }
  } */

 export const  Audifonos= (props: JSX.IntrinsicElements['group'])=> {
          const group = useRef<THREE.Group>()
          const { nodes, materials } = useGLTF('https://vazxmixjsiawhamofees.supabase.co/storage/v1/object/public/models/headphones/model.gltf') as GLTFResult
          return (
            <group ref={group} {...props} dispose={null}>
        <mesh geometry={nodes.Cushion.geometry} material={materials.Cushion} />
<mesh geometry={nodes.Ear_Cup.geometry} material={nodes.Ear_Cup.material} />
<mesh geometry={nodes['Mid-'].geometry} material={materials['Black-2']} />
<mesh geometry={nodes.Seprator001.geometry} material={nodes.Seprator001.material} />
<mesh geometry={nodes.Seprator.geometry} material={materials.Connector} />
<mesh geometry={nodes.Cylinder025.geometry} material={nodes.Cylinder025.material} />
<mesh geometry={nodes.Cylinder025_1.geometry} material={materials.GlowBlue} />

            </group>
          )
        }

useGLTF.preload('https://vazxmixjsiawhamofees.supabase.co/storage/v1/object/public/models/headphones/model.gltf')